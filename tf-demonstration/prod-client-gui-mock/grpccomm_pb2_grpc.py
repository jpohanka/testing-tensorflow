# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import grpccomm_pb2 as grpccomm__pb2


class TFCalcStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Calculate = channel.unary_unary(
        '/grpccomm.TFCalc/Calculate',
        request_serializer=grpccomm__pb2.CalcRequest.SerializeToString,
        response_deserializer=grpccomm__pb2.CalcResponse.FromString,
        )


class TFCalcServicer(object):

  def Calculate(self, request, context):
    """Define the gRPC calculation service.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TFCalcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Calculate': grpc.unary_unary_rpc_method_handler(
          servicer.Calculate,
          request_deserializer=grpccomm__pb2.CalcRequest.FromString,
          response_serializer=grpccomm__pb2.CalcResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpccomm.TFCalc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
